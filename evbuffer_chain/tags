!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CHAIN_SPACE_LEN	evbuffer.h	23;"	d
EVBUFFER_CHAIN_EXTRA	evbuffer.h	21;"	d
EVBUFFER_CHAIN_MAX	evbuffer.h	18;"	d
EVBUFFER_CHAIN_MAX_AUTO_SIZE	evbuffer.h	27;"	d
EVBUFFER_CHAIN_SIZE	evbuffer.h	20;"	d
EVBUFFER_INTERNAL_H_INCLUDED_	evbuffer.h	3;"	d
EV_UINT32_MAX	evbuffer.h	14;"	d
EV_UINT64_MAX	evbuffer.h	34;"	d
MAX_TO_COPY_IN_EXPAND	evbuffer.h	30;"	d
MAX_TO_REALIGN_IN_EXPAND	evbuffer.h	31;"	d
MIN_BUFFER_SIZE	evbuffer.h	16;"	d
WSABUF_FROM_EVBUFFER_IOV	evbuffer.h	132;"	d
ZERO_CHAIN	evbuffer.c	/^ZERO_CHAIN(struct evbuffer *dst)$/;"	f	file:
buffer	evbuffer.h	/^	unsigned char *buffer;$/;"	m	struct:evbuffer_chain
buffer_len	evbuffer.h	/^	size_t buffer_len;$/;"	m	struct:evbuffer_chain
cbarg	evbuffer.h	/^	void *cbarg;$/;"	m	struct:evbuffer_cb_entry
chain	evbuffer.h	/^		void *chain;$/;"	m	struct:evbuffer_ptr::__anon1
deferred_cbs	evbuffer.h	/^	unsigned deferred_cbs : 1;$/;"	m	struct:evbuffer
evbuffer	evbuffer.h	/^struct evbuffer {$/;"	s
evbuffer_add	evbuffer.c	/^evbuffer_add(struct evbuffer *buf, const void *data_in, size_t datlen)$/;"	f
evbuffer_cb_entry	evbuffer.h	/^struct evbuffer_cb_entry {$/;"	s
evbuffer_chain	evbuffer.h	/^struct evbuffer_chain {$/;"	s
evbuffer_chain_align	evbuffer.c	/^evbuffer_chain_align(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_free	evbuffer.c	/^evbuffer_chain_free(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_chain_free_before	my_evbuffer.c	/^evbuffer_chain_free_before(struct evbuffer_chain *buf)$/;"	f	file:
evbuffer_chain_insert	evbuffer.c	/^evbuffer_chain_insert(struct evbuffer *buf,$/;"	f	file:
evbuffer_chain_insert	my_evbuffer.c	/^evbuffer_chain_insert(struct evbuffer *buf,$/;"	f	file:
evbuffer_chain_insert_new	evbuffer.c	/^evbuffer_chain_insert_new(struct evbuffer *buf, size_t datlen)$/;"	f	file:
evbuffer_chain_new	evbuffer.c	/^evbuffer_chain_new(size_t size)$/;"	f	file:
evbuffer_chain_new	my_evbuffer.c	/^evbuffer_chain_new(size_t size)$/;"	f	file:
evbuffer_chain_should_realign	evbuffer.c	/^evbuffer_chain_should_realign(struct evbuffer_chain *chain,$/;"	f	file:
evbuffer_clear_flags	evbuffer.c	/^evbuffer_clear_flags(struct evbuffer *buf, uint64_t flags)$/;"	f
evbuffer_copyout	evbuffer.c	/^evbuffer_copyout(struct evbuffer *buf, void *data_out, size_t datlen)$/;"	f
evbuffer_copyout_from	evbuffer.c	/^evbuffer_copyout_from(struct evbuffer *buf, const struct evbuffer_ptr *pos,$/;"	f
evbuffer_decref_and_unlock_	evbuffer.c	/^evbuffer_decref_and_unlock_(struct evbuffer *buffer)$/;"	f
evbuffer_drain	evbuffer.c	/^evbuffer_drain(struct evbuffer *buf, size_t len)$/;"	f
evbuffer_expand	evbuffer.c	/^evbuffer_expand(struct evbuffer *buf, size_t datlen)$/;"	f
evbuffer_expand_singlechain	evbuffer.c	/^evbuffer_expand_singlechain(struct evbuffer *buf, size_t datlen)$/;"	f	file:
evbuffer_free	evbuffer.c	/^evbuffer_free(struct evbuffer *buffer)$/;"	f
evbuffer_free_all_chains	evbuffer.c	/^evbuffer_free_all_chains(struct evbuffer_chain *chain)$/;"	f	file:
evbuffer_free_trailing_empty_chains	evbuffer.c	/^evbuffer_free_trailing_empty_chains(struct evbuffer *buf)$/;"	f	file:
evbuffer_get_length	evbuffer.c	/^evbuffer_get_length(const struct evbuffer *buffer)$/;"	f
evbuffer_new	evbuffer.c	/^evbuffer_new(void)$/;"	f
evbuffer_new	my_evbuffer.c	/^evbuffer_new(void)$/;"	f
evbuffer_prepend	evbuffer.c	/^evbuffer_prepend(struct evbuffer *buf, const void *data, size_t datlen)$/;"	f
evbuffer_ptr	evbuffer.h	/^struct evbuffer_ptr {$/;"	s
evbuffer_remove	evbuffer.c	/^evbuffer_remove(struct evbuffer *buf, void *data_out, size_t datlen)$/;"	f
evbuffer_set_flags	evbuffer.c	/^evbuffer_set_flags(struct evbuffer *buf, uint64_t flags)$/;"	f
first	evbuffer.h	/^	struct evbuffer_chain *first;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
flags	evbuffer.h	/^	uint32_t flags;$/;"	m	struct:evbuffer
flags	evbuffer.h	/^	uint32_t flags;$/;"	m	struct:evbuffer_cb_entry
flags	evbuffer.h	/^	unsigned flags;$/;"	m	struct:evbuffer_chain
freeze_end	evbuffer.h	/^	unsigned freeze_end : 1;$/;"	m	struct:evbuffer
freeze_start	evbuffer.h	/^	unsigned freeze_start : 1;$/;"	m	struct:evbuffer
internal_	evbuffer.h	/^	} internal_;$/;"	m	struct:evbuffer_ptr	typeref:struct:evbuffer_ptr::__anon1
last	evbuffer.h	/^	struct evbuffer_chain *last;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
last_with_datap	evbuffer.h	/^	struct evbuffer_chain **last_with_datap;$/;"	m	struct:evbuffer	typeref:struct:evbuffer::evbuffer_chain
main	evbuffer.c	/^int main()$/;"	f
main	my_evbuffer.c	/^int main()$/;"	f
misalign	evbuffer.h	/^	ssize_t misalign;$/;"	m	struct:evbuffer_chain
n_add_for_cb	evbuffer.h	/^	size_t n_add_for_cb;$/;"	m	struct:evbuffer
n_del_for_cb	evbuffer.h	/^	size_t n_del_for_cb;$/;"	m	struct:evbuffer
next	evbuffer.h	/^	LIST_ENTRY(evbuffer_cb_entry) next;$/;"	m	struct:evbuffer_cb_entry
next	evbuffer.h	/^	struct evbuffer_chain *next;$/;"	m	struct:evbuffer_chain	typeref:struct:evbuffer_chain::evbuffer_chain
off	evbuffer.h	/^	size_t off;$/;"	m	struct:evbuffer_chain
own_lock	evbuffer.h	/^	unsigned own_lock : 1;$/;"	m	struct:evbuffer
pos	evbuffer.h	/^	ssize_t pos;$/;"	m	struct:evbuffer_ptr
pos_in_chain	evbuffer.h	/^		size_t pos_in_chain;$/;"	m	struct:evbuffer_ptr::__anon1
refcnt	evbuffer.h	/^	int refcnt;$/;"	m	struct:evbuffer
refcnt	evbuffer.h	/^	int refcnt;$/;"	m	struct:evbuffer_chain
total_len	evbuffer.h	/^	size_t total_len;$/;"	m	struct:evbuffer
