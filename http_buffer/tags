!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARRAY_IDX	buffer.c	26;"	d	file:
DATA_UNSET	array.h	/^        DATA_UNSET;$/;"	m	struct:data_unset
DATA_UNSET	array.h	10;"	d
_ARRAY_H_	array.h	2;"	d
_node_list	buffer.c	/^struct _node_list {  $/;"	s	file:
_test_bufdayu	buffer.c	/^_test_bufdayu(buff_array *p_buf, int ndata)$/;"	f
_test_cmp_serial_head_buf	buffer.c	/^_test_cmp_serial_head_buf(buff_array *p_buf, struct node_head *head   )$/;"	f
_test_del	buffer.c	/^_test_del(buff_array *p_buf, struct node_head *head, const char *key)$/;"	f
array	array.h	/^} array;$/;"	t	typeref:struct:__anon2
array_find_or_insert	array.c	/^array_find_or_insert(array *a, data_unset *entry) $/;"	f
array_get_index	array.c	/^array_get_index(const array *a, const char *key, size_t keylen, size_t *rndx) {$/;"	f
array_init	array.c	/^array_init(void) {$/;"	f
array_insert_unique	array.c	/^array_insert_unique(array *a, data_unset *entry) $/;"	f
buf	buffer.c	/^    char buf[250];  $/;"	m	struct:_node_list	file:
buff_array	buffer.c	/^}buff_array;$/;"	t	typeref:struct:__anon1	file:
buff_del_key	buffer.c	/^buff_del_key(buff_array *p_buff,const char *key)$/;"	f
buff_find_key	buffer.c	/^buff_find_key(const buff_array *p_buff, const char *key, int *idx)$/;"	f
buff_init	buffer.c	/^buff_init()$/;"	f
buff_insert	buffer.c	/^buff_insert(buff_array *p_arr, char *key )$/;"	f
buff_printf	buffer.c	/^buff_printf(buff_array *p_buf)$/;"	f
create_data_unset	array.c	/^create_data_unset(char *key, char *value)$/;"	f
data	array.h	/^    data_unset  **data;$/;"	m	struct:__anon2
data	buffer.c	/^    char **data; \/\/存数据的地方$/;"	m	struct:__anon1	file:
data_unset	array.h	/^typedef struct data_unset {$/;"	s
data_unset	array.h	/^} data_unset;$/;"	t	typeref:struct:data_unset
free_array	array.c	/^free_array(array *p)$/;"	f
free_data_unset	array.c	/^free_data_unset(data_unset *p)$/;"	f
get_data_unset_by_key	array.c	/^get_data_unset_by_key(array *p, char *key )$/;"	f
main	buffer.c	/^int main()$/;"	f
main	test_main.c	/^int main()$/;"	f
size	array.h	/^    size_t size;$/;"	m	struct:__anon2
size	buffer.c	/^    size_t size;\/\/总长度$/;"	m	struct:__anon1	file:
sort	buffer.c	/^    size_t *sort;\/\/存数据顺序的数组$/;"	m	struct:__anon1	file:
sorted	array.h	/^    size_t *sorted;$/;"	m	struct:__anon2
test_add	test_main.c	/^void test_add(void **state) $/;"	f
test_new	buffer.c	/^void test_new(void **state){$/;"	f
test_printf	array.c	/^test_printf(array *p)$/;"	f
test_sub	buffer.c	/^void test_sub(void **state) {  $/;"	f
used	array.h	/^    size_t used; \/* <= SSIZE_MAX *\/$/;"	m	struct:__anon2
used	buffer.c	/^    size_t used; \/\/已经使用的长度$/;"	m	struct:__anon1	file:
